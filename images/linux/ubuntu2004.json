{
    "variables": {
        "image_folder": "/imagegeneration",
        "imagedata_file": "/imagegeneration/imagedata.json",
        "installer_script_folder": "/imagegeneration/installers",
        "helper_script_folder": "/imagegeneration/helpers",
        "image_version": "dev",
        "image_os": "ubuntu20",
        "run_validation_diskspace": "false",
        "rev": "master",
        "ver": "",
        "dockerhub_username": "{{env `DCKR_USERNAME`}}",
        "dockerhub_password": "{{env `DCKR_PASSWORD`}}",
        "quay_username": "{{env `QUAY_USERNAME`}}",
        "quay_password": "{{env `QUAY_PASSWORD`}}",
        "ghcr_username": "{{env `GHCR_USERNAME`}}",
        "ghcr_password": "{{env `GHCR_PASSWORD`}}"
    },
    "sensitive-variables": [
        "dockerhub_username",
        "dockerhub_password",
        "quay_username",
        "quay_password",
        "ghcr_username",
        "ghcr_password"
    ],
    "builders": [
        {
            "name": "packer-ubuntu-20.04",
            "type": "docker",
            "image": "ghcr.io/catthehacker/ubuntu:runner-20.04",
            "discard": false,
            "commit": true,
            "pull": true,
            "privileged": true,
            "volumes": {
                "/var/run/docker.sock": "/var/run/docker.sock"
            },
            "author": "https://github.com/catthehacker",
            "fix_upload_owner": true,
            "changes": [
                "WORKDIR /tmp",
                "ENTRYPOINT /bin/bash",
                "LABEL org.opencontainers.image.authors=https://github.com/catthehacker",
                "LABEL org.opencontainers.image.revision={{user `rev`}}",
                "LABEL org.opencontainers.image.source=https://github.com/catthehacker/virtual-environments-fork",
                "LABEL org.opencontainers.image.title=full-20.04-amd64",
                "LABEL org.opencontainers.image.url=https://github.com/catthehacker/virtual-environments-fork/tree/{{user `rev`}}/images/linux",
                "LABEL org.opencontainers.image.vendor=catthehacker",
                "LABEL org.opencontainers.image.version={{user `rev`}}"
            ]
        }
    ],
    "post-processors": [
        [
            {
                "type": "docker-tag",
                "repository": "ghcr.io/catthehacker/ubuntu",
                "tags": [
                    "full-20.04{{user `ver`}}",
                    "full-latest{{user `ver`}}"
                ]
            },
            {
                "type": "docker-push",
                "login_username": "{{user `ghcr_username`}}",
                "login_password": "{{user `ghcr_password`}}",
                "login_server": "ghcr.io"
            }
        ],
        [
            {
                "type": "docker-tag",
                "repository": "quay.io/catthehacker/ubuntu",
                "tags": [
                    "full-20.04{{user `ver`}}",
                    "full-latest{{user `ver`}}"
                ]
            },
            {
                "type": "docker-push",
                "login_username": "{{user `quay_username`}}",
                "login_password": "{{user `quay_password`}}",
                "login_server": "quay.io"
            }
        ],
        [
            {
                "type": "docker-tag",
                "repository": "dockerr.io/catthehacker/ubuntu",
                "tags": [
                    "full-20.04{{user `ver`}}",
                    "full-latest{{user `ver`}}"
                ]
            },
            {
                "type": "docker-push",
                "login_username": "{{user `dockerhub_username`}}",
                "login_password": "{{user `dockerhub_password`}}",
                "login_server": "docker.io"
            }
        ]
    ],
    "provisioners": [
        {
            "type": "shell",
            "inline": [
                "dpkg-reconfigure debconf --frontend=noninteractive",
                "apt-get -yq update",
                "apt-get -yq install lsb-release sudo rsync wget apt-utils"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "inline": [
                "mkdir -p {{user `image_folder`}}",
                "chmod 777 {{user `image_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "script": "{{template_dir}}/scripts/base/apt-mock.sh",
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "script": "{{template_dir}}/scripts/base/apt.sh",
            "environment_vars": ["DEBIAN_FRONTEND=noninteractive"],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "script": "{{template_dir}}/scripts/base/limits.sh",
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "file",
            "source": "{{template_dir}}/scripts/helpers",
            "destination": "{{user `helper_script_folder`}}"
        },
        {
            "type": "file",
            "source": "{{template_dir}}/scripts/installers",
            "destination": "{{user `installer_script_folder`}}"
        },
        {
            "type": "file",
            "source": "{{ template_dir }}/post-generation",
            "destination": "{{user `image_folder`}}"
        },
        {
            "type": "file",
            "source": "{{template_dir}}/scripts/tests",
            "destination": "{{user `image_folder`}}"
        },
        {
            "type": "file",
            "source": "{{ template_dir }}/scripts/SoftwareReport",
            "destination": "{{user `image_folder`}}"
        },
        {
            "type": "file",
            "source": "{{template_dir}}/toolsets/toolset-2004.json",
            "destination": "{{user `installer_script_folder`}}/toolset.json"
        },
        {
            "type": "shell",
            "scripts": ["{{template_dir}}/scripts/installers/preimagedata.sh"],
            "environment_vars": [
                "IMAGE_VERSION={{user `image_version`}}",
                "IMAGEDATA_FILE={{user `imagedata_file`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/configure-environment.sh"
            ],
            "environment_vars": [
                "IMAGE_VERSION={{user `image_version`}}",
                "IMAGE_OS={{user `image_os`}}",
                "HELPER_SCRIPTS={{user `helper_script_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/complete-snap-setup.sh"
            ],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/powershellcore.sh"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/Install-PowerShellModules.ps1",
                "{{template_dir}}/scripts/installers/Install-AzureModules.ps1"
            ],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} pwsh -f {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/docker-compose.sh",
                "{{template_dir}}/scripts/installers/docker-moby.sh"
            ],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}",
                "DOCKERHUB_LOGIN={{user `dockerhub_login`}}",
                "DOCKERHUB_PASSWORD={{user `dockerhub_password`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/azcopy.sh",
                "{{template_dir}}/scripts/installers/azure-cli.sh",
                "{{template_dir}}/scripts/installers/azure-devops-cli.sh",
                "{{template_dir}}/scripts/installers/basic.sh",
                "{{template_dir}}/scripts/installers/bicep.sh",
                "{{template_dir}}/scripts/installers/aliyun-cli.sh",
                "{{template_dir}}/scripts/installers/apache.sh",
                "{{template_dir}}/scripts/installers/aws.sh",
                "{{template_dir}}/scripts/installers/clang.sh",
                "{{template_dir}}/scripts/installers/swift.sh",
                "{{template_dir}}/scripts/installers/cmake.sh",
                "{{template_dir}}/scripts/installers/codeql-bundle.sh",
                "{{template_dir}}/scripts/installers/containers.sh",
                "{{template_dir}}/scripts/installers/dotnetcore-sdk.sh",
                "{{template_dir}}/scripts/installers/erlang.sh",
                "{{template_dir}}/scripts/installers/firefox.sh",
                "{{template_dir}}/scripts/installers/gcc.sh",
                "{{template_dir}}/scripts/installers/gfortran.sh",
                "{{template_dir}}/scripts/installers/git.sh",
                "{{template_dir}}/scripts/installers/github-cli.sh",
                "{{template_dir}}/scripts/installers/google-chrome.sh",
                "{{template_dir}}/scripts/installers/google-cloud-sdk.sh",
                "{{template_dir}}/scripts/installers/haskell.sh",
                "{{template_dir}}/scripts/installers/heroku.sh",
                "{{template_dir}}/scripts/installers/hhvm.sh",
                "{{template_dir}}/scripts/installers/java-tools.sh",
                "{{template_dir}}/scripts/installers/kubernetes-tools.sh",
                "{{template_dir}}/scripts/installers/oc.sh",
                "{{template_dir}}/scripts/installers/leiningen.sh",
                "{{template_dir}}/scripts/installers/mercurial.sh",
                "{{template_dir}}/scripts/installers/miniconda.sh",
                "{{template_dir}}/scripts/installers/mono.sh",
                "{{template_dir}}/scripts/installers/mysql.sh",
                "{{template_dir}}/scripts/installers/mssql-cmd-tools.sh",
                "{{template_dir}}/scripts/installers/sqlpackage.sh",
                "{{template_dir}}/scripts/installers/nginx.sh",
                "{{template_dir}}/scripts/installers/nvm.sh",
                "{{template_dir}}/scripts/installers/nodejs.sh",
                "{{template_dir}}/scripts/installers/bazel.sh",
                "{{template_dir}}/scripts/installers/oras-cli.sh",
                "{{template_dir}}/scripts/installers/phantomjs.sh",
                "{{template_dir}}/scripts/installers/php.sh",
                "{{template_dir}}/scripts/installers/postgresql.sh",
                "{{template_dir}}/scripts/installers/pulumi.sh",
                "{{template_dir}}/scripts/installers/ruby.sh",
                "{{template_dir}}/scripts/installers/r.sh",
                "{{template_dir}}/scripts/installers/rust.sh",
                "{{template_dir}}/scripts/installers/julia.sh",
                "{{template_dir}}/scripts/installers/sbt.sh",
                "{{template_dir}}/scripts/installers/selenium.sh",
                "{{template_dir}}/scripts/installers/terraform.sh",
                "{{template_dir}}/scripts/installers/packer.sh",
                "{{template_dir}}/scripts/installers/vcpkg.sh",
                "{{template_dir}}/scripts/installers/dpkg-config.sh",
                "{{template_dir}}/scripts/installers/mongodb.sh",
                "{{template_dir}}/scripts/installers/android.sh",
                "{{template_dir}}/scripts/installers/yq.sh",
                "{{template_dir}}/scripts/installers/pypy.sh",
                "{{template_dir}}/scripts/installers/python.sh",
                "{{template_dir}}/scripts/installers/graalvm.sh"
            ],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}",
                "DEBIAN_FRONTEND=noninteractive"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/Install-Toolset.ps1",
                "{{template_dir}}/scripts/installers/Configure-Toolset.ps1"
            ],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} pwsh -f {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": ["{{template_dir}}/scripts/installers/pipx-packages.sh"],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": ["{{template_dir}}/scripts/installers/homebrew.sh"],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "DEBIAN_FRONTEND=noninteractive",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}"
            ],
            "execute_command": "/bin/sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "pause_before": "60s",
            "start_retry_timeout": "10m",
            "scripts": ["{{template_dir}}/scripts/installers/cleanup.sh"],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "script": "{{template_dir}}/scripts/base/apt-mock-remove.sh",
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/post-deployment.sh"
            ],
            "environment_vars": [
                "HELPER_SCRIPT_FOLDER={{user `helper_script_folder`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}",
                "IMAGE_FOLDER={{user `image_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/validate-disk-space.sh"
            ],
            "environment_vars": [
                "RUN_VALIDATION={{user `run_validation_diskspace`}}"
            ]
        }
    ]
}
